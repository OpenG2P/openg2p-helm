apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "common.names.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.fullname" . }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: backend
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: DOMAIN
              {{- if .Values.domain }}
              value: {{ .Values.domain }}
              {{- else }}
              value: {{ .Values.global.hostname }}
              {{- end }}
            - name: SYSADMIN_EMAIL
              {{- if .Values.sysAdminEmail }}
              value: {{ .Values.sysAdminEmail }}
              {{- else }}
              value: {{ .Values.global.sysAdminEmail }}
              {{- end }}
            - name: HTTPS_PORT
              {{- if .Values.httpsPort }}
              value: {{ .Values.httpsPort | quote }}
              {{- else }}
              value: {{ .Values.global.httpsPort | quote }}
              {{- end }}
            - name: POSTGRES_HOSTNAME
              {{- if .Values.postgresql.enabled }}
              value: postgres
              {{- else }}
              value: {{ .Values.externalDatabase.hostname | quote }}
              {{- end }}
            - name: POSTGRES_USERNAME
              {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.auth.username | quote }}
              {{- else }}
              value: {{ .Values.externalDatabase.username | quote }}
              {{- end }}
            - name: POSTGRES_PASSWORD
              {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.auth.password | quote }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret | quote }}
                  key: {{ .Values.externalDatabase.existingSecretPasswordKey | quote }}
              {{- end }}
            - name: POSTGRES_DATABASE
              {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.auth.database | quote }}
              {{- else }}
              value: {{ .Values.externalDatabase.database | quote }}
              {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            {{- range .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            {{- range .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
          ports:
          - name: container-port
            containerPort: {{ .Values.containerPort }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: enketo-api-key
            mountPath: /etc/secrets/enketo-api-key
            subPath: {{ .Values.enketo.apiKeySecret.key }}
          - name: config-json-template
            mountPath: /usr/share/odk/config.json.template
            subPath: config.json.template
          - name: start-odk-command
            mountPath: /usr/odk/start-odk.sh
            subPath: start-odk.sh
      volumes:
      - name: enketo-api-key
        secret:
          secretName: {{ .Values.enketo.apiKeySecret.name }}
      - name: start-odk-command
        configMap:
          defaultMode: 493
          name: {{ include "common.names.fullname" . }}
      - name: config-json-template
        configMap:
          name: {{ include "common.names.fullname" . }}
