global:
  hostname: ""

replicaCount: 1

service:
  type: ClusterIP
  port: 80

image:
  registry: docker.io
  repository: openg2p/odk-central-frontend
  tag: v2024.1.0-oidc
  pullPolicy: Always

containerPort: 80

startupProbe:
  enabled: true
  httpGet:
    path: "/"
    port: 80
  initialDelaySeconds: 0
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1

livenessProbe:
  enabled: true
  httpGet:
    path: "/"
    port: 80
  initialDelaySeconds: 20
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1

readinessProbe:
  enabled: true
  httpGet:
    path: "/"
    port: 80
  initialDelaySeconds: 0
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1

command: []
args: []

resources:
  limits: {}
  #   cpu: 200m
  #   memory: 256Mi
  requests: {}
  #   cpu: 100m
  #   memory: 1500Mi

containerSecurityContext:
  enabled: false
  runAsUser: odk
  runAsNonRoot: true

podSecurityContext:
  enabled: false
  fsGroup: 1001

envVars:
  # Donot change the following. For now.
  SSL_TYPE: upstream
  DOMAIN: "_"
  ENKETO_URL: '{{ .Release.Name }}-enketo'
  BACKEND_URL: '{{ .Release.Name }}-backend'

  SENTRY_ORG_SUBDOMAIN: "o130137"
  SENTRY_KEY: "3cf75f54983e473da6bd07daddf0d2ee"
  SENTRY_PROJECT: "1298632"

setupOdkScript: |-
  #!/bin/bash
  echo "writing fresh nginx templates..."
  export DOLLAR='$'
  envsubst < /usr/share/odk/nginx/odk.conf.template > /etc/nginx/conf.d/odk.conf
  rm -f /etc/nginx/conf.d/redirector.conf
  exec nginx -g "daemon off;"

odkConfTemplate: |-
  server {
    listen 80;

    server_tokens off;

    include /usr/share/odk/nginx/common-headers.conf;

    client_max_body_size 100m;

    gzip on;
    gzip_vary on;
    gzip_min_length 1280;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml text/csv;

    location = /robots.txt {
      add_header Content-Type text/plain;
      return 200 "User-agent: *\nDisallow: /\n";
    }

    location /- {
      proxy_pass http://${ENKETO_URL}:8005;
      proxy_redirect off;
      proxy_set_header Host ${DOLLAR}host;

      add_header Referrer-Policy same-origin;
      add_header Strict-Transport-Security "max-age=63072000" always;
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options nosniff;
    }

    location ~ ^/v\d {
      proxy_set_header X-Forwarded-Proto https;
      proxy_pass http://${BACKEND_URL}:8383;
      proxy_redirect off;

      # buffer requests, but not responses, so streaming out works.
      proxy_request_buffering on;
      proxy_buffering off;
      proxy_read_timeout 2m;
    }

    location / {
      root /usr/share/nginx/html;

      location /version.txt {
        include /usr/share/odk/nginx/common-headers.conf;
        add_header Cache-Control no-cache;
      }
      location /index.html {
        include /usr/share/odk/nginx/common-headers.conf;
        add_header Cache-Control no-cache;
      }
    }

    location /csp-report {
      proxy_pass https://${SENTRY_ORG_SUBDOMAIN}.ingest.sentry.io/api/${SENTRY_PROJECT}/security/?sentry_key=${SENTRY_KEY};
    }
  }
