replicaCount: 1

service:
  type: ClusterIP
  port: 8383

image:
  registry: docker.io
  repository: openg2p/odk-central-backend
  tag: v2023.1.0
  pullPolicy: Always

containerPort: 8383

startupProbe:
  enabled: true
  tcpSocket:
    port: 8383
  initialDelaySeconds: 0
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1

livenessProbe:
  enabled: true
  tcpSocket:
    port: 8383
  initialDelaySeconds: 20
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1

readinessProbe:
  enabled: true
  tcpSocket:
    port: 8383
  initialDelaySeconds: 0
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1

command: ["./wait-for-it.sh", "postgres:5432", "--", "./start-odk.sh"]
args: []

resources:
  limits: {}
  #   cpu: 200m
  #   memory: 256Mi
  requests: {}
  #   cpu: 100m
  #   memory: 1500Mi

containerSecurityContext:
  enabled: false
  runAsUser: odk
  runAsNonRoot: true

podSecurityContext:
  enabled: false
  fsGroup: 1001

extraEnvVars: []

extraEnvVarsCM: []

extraEnvVarsSecret: []

postgresql:
  # any other postgres helm chart configuration here
  enabled: true
  fullnameOverride: postgres
  auth:
    username: odk
    password: odk
    database: odk
    existingSecret: ""
  architecture: standalone

# domain name of installation
# domain: "example.com"
domain: ""
# https port of installation
# httpsPort: "443"
httpsPort: ""
# system admin email
# sysAdminEmail: "admin@example.com"
sysAdminEmail: ""
# Enketo Url
enketo:
  apiKeySecret:
    name: "enketo"
    key: "enketo-api-key"
