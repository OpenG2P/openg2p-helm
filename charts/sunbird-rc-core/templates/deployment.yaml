apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "registry.fullname" . }}
  labels:
    {{- include "registry.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "registry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $k, $v := .Values.envVars }}
            - name: {{ $k }}
            {{- if and (not $v) (eq $k "connectionInfo_uri") }}
              value: {{ printf "jdbc:postgresql://%s:5432/registry" (include "postgresql.v1.primary.fullname" $.Subcharts.postgresql) }}
            {{- else if and (eq $k "elastic_search_connection_url") (not $v) }}
              value: {{ printf "http://%s:9200" (include "elasticsearch.service.name" $.Subcharts.elasticsearch) }}
            {{- else }}
              value: {{ $v | quote }}
            {{- end }}
          {{- end }}
          {{- range $k, $v := .Values.envVarsFrom }}
            - name: {{ $k }}
            {{- if and (eq $k "connectionInfo_password") (not $v) }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.v1.primary.fullname" $.Subcharts.postgresql }}
                  key: password
            {{- else }}
              {{- toYaml $v | nindent 14 }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/docs/swagger.json
              port: {{ .Values.containerPort }}
            failureThreshold: 20
            periodSeconds: 30
            timeoutSeconds: 10
            initialDelaySeconds: 30
          livenessProbe:
            tcpSocket:
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
            failureThreshold: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: schemas
              mountPath: /home/sunbirdrc/config/public/_schemas
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: schemas
          configMap:
            {{- if .Values.schemasConfigmapName }}
            name: {{ .Values.schemasConfigmapName }}
            {{- else }}
            name: {{ include "registry.fullname" . }}-schemas
            {{- end }}
